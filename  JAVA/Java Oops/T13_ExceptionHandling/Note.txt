What is Exceptin?
Sol:
The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors so that the normal flow of the application can be maintained.
Exception is an abnormal condition.

Advantage of Exception Handling
The core advantage of exception handling is to maintain the normal flow of the application. An exception normally disrupts the normal flow of the application;
that is why we need to handle exceptions. Let's consider a scenario:
statement 1;  
statement 2;  
statement 3;  
statement 4;  
statement 5;//exception occurs  
statement 6;  
statement 7;  
statement 8;  
statement 9;  
statement 10;  
Suppose there are 10 statements in a Java program and an exception occurs at statement 5; the rest of the code will not be executed, i.e.,
statements 6 to 10 will not be executed. However, when we perform exception handling, the rest of the statements will be executed.
That is why we use exception handling in Java.

Types of Java Exceptions

There are mainly two types of exceptions: checked and unchecked. An error is considered as the unchecked exception. However, according to Oracle,
there are three types of exceptions namely:

>Checked Exception
>Unchecked Exception
>Error

Difference between Checked and Unchecked Exceptions

1) Checked Exception
The classes that directly inherit the Throwable class except RuntimeException and Error are known as checked exceptions. 
For example, IOException, SQLException, etc. Checked exceptions are checked at compile-time

2) Unchecked Exception
The classes that inherit the RuntimeException are known as unchecked exceptions. For example, ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException, etc. Unchecked exceptions are not checked at compile-time, but they are checked at runtime.

3) Error
Error is irrecoverable. Some example of errors are OutOfMemoryError, VirtualMachineError, AssertionError etc.

THROW KEYWORD
The throw keyword in Java is used to explicitly throw an exception from a method or any block of code.
We can throw either checked or unchecked exception. The throw keyword is mainly used to throw custom exceptions. 

Syntax in Java throw
throw Instance
Example:
throw new ArithmeticException("/ by zero");

THROWS KEYWORD
The thows keyword indicate that the block of code can give the exception so the user that is using they have to handel it .


Final: It is a keyword
This is an important question concerning the interview point of view.
final keyword
final (lowercase) is a reserved keyword in java. We can’t use it as an identifier, as it is reserved. We can use this keyword with variables, methods, and also with classes.
The final keyword in java has a different meaning depending upon whether it is applied to a variable, class, or method.
final with Variables: The value of the variable cannot be changed once initialized.

final with Class: 
The class cannot be subclassed. Whenever we declare any class as final, it means that we can’t extend that class or that class can’t be extended, 
or we can’t make a subclass of that class. 
final class RR {
	public static void main(String[] args)
	{
		int a = 10;
	}
}
// here gets Compile time error that
// we can't extend RR as it is final.
class KK extends RR {
	// more code here with main method
}
final with Method:
The method cannot be overridden by a subclass. Whenever we declare any method as final, then it means that we can’t override that method. 
class QQ {
	final void rr() {}
	public static void main(String[] args)
	{
	}
}

class MM extends QQ {

	// Here we get compile time error
	// since can't extend rr since it is final.
	void rr() {}
}

Finally :
Finally is a block always associated with try cath block to clean up the code.
finally is the block in Java Exception Handling to execute the important code whether the exception occurs or not.
Finally block is always related to the try and catch block in exception handling.
Finally block is executed as soon as the try-catch block is executed.
It's execution is not dependant on the exception.

finalize:
finalize is a method in java which is used to perform clean up processing just before the object is grabge collected
finalize() method is used with the objects.
finalize method performs the cleaning activities with respect to the object before its destruction.
finalize method is executed just before the object is destroyed.